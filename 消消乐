import pygame
import random

# 初始化 Pygame
pygame.init()

# 游戏窗口设置
WIDTH, HEIGHT = 400, 400
GRID_SIZE = 8
TILE_SIZE = WIDTH // GRID_SIZE
screen = pygame.display.set_mode((WIDTH, HEIGHT))
pygame.display.set_caption("消消乐")

# 颜色定义
COLORS = [(255, 0, 0), (0, 255, 0), (0, 0, 255), (255, 255, 0), (255, 165, 0)]

# 创建游戏网格
grid = [[random.choice(COLORS) for _ in range(GRID_SIZE)] for _ in range(GRID_SIZE)]

def draw_grid():
    for y in range(GRID_SIZE):
        for x in range(GRID_SIZE):
            pygame.draw.rect(screen, grid[y][x], (x * TILE_SIZE, y * TILE_SIZE, TILE_SIZE, TILE_SIZE))
            pygame.draw.rect(screen, (0, 0, 0), (x * TILE_SIZE, y * TILE_SIZE, TILE_SIZE, TILE_SIZE), 1)

def check_matches():
    matches = []
    for y in range(GRID_SIZE):
        for x in range(GRID_SIZE):
            if x < GRID_SIZE - 2 and grid[y][x] == grid[y][x + 1] == grid[y][x + 2]:
                matches.extend([(y, x), (y, x + 1), (y, x + 2)])
            if y < GRID_SIZE - 2 and grid[y][x] == grid[y + 1][x] == grid[y + 2][x]:
                matches.extend([(y, x), (y + 1, x), (y + 2, x)])
    return set(matches)

def remove_matches(matches):
    for y, x in matches:
        grid[y][x] = None

def drop_tiles():
    for x in range(GRID_SIZE):
        column = [grid[y][x] for y in range(GRID_SIZE) if grid[y][x] is not None]
        column = [None] * (GRID_SIZE - len(column)) + column
        for y in range(GRID_SIZE):
            grid[y][x] = column[y]

# 游戏主循环
running = True
while running:
    screen.fill((255, 255, 255))
    draw_grid()
    
    matches = check_matches()
    if matches:
        remove_matches(matches)
        drop_tiles()

    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            running = False

    pygame.display.flip()
    pygame.time.delay(500)

pygame.quit()
